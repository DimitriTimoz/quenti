import { type NextPage } from "next";
import Head from "next/head";
import { useSession } from "next-auth/react";

import { api } from "../utils/api";
import { Navbar } from "../components/navbar";
import { inferProcedureInput } from "@trpc/server";
import { AppRouter } from "../server/api/root";
import { FormEvent } from "react";
import Link from "next/link";

const Home: NextPage = () => {
  const utils = api.useContext();
  const { data: session } = useSession();

  const { data } = api.studySets.getAll.useQuery(undefined, {
    enabled: session?.user !== undefined,
  });

  const addStudySet = api.studySets.create.useMutation({
    async onSuccess() {
      await utils.studySets.invalidate();
    },
  });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container">
        <form
          onSubmit={
            void (async (e: FormEvent<HTMLFormElement>) => {
              e.preventDefault();
              const $form = e.currentTarget;
              const values = Object.fromEntries(new FormData($form));

              type Input = inferProcedureInput<
                AppRouter["studySets"]["create"]
              >;
              const input: Input = {
                title: values.title as string,
              };

              try {
                await addStudySet.mutateAsync(input);
                $form.reset();
              } catch {}
            })
          }
        ></form>
        <h3 className="mb-6 text-xl text-slate-700 dark:text-slate-300">
          Your Recent Sets
        </h3>
        <div
          className="grid gap-4"
          style={{
            gridTemplateColumns: "repeat(auto-fit, minmax(300px, 1fr))",
          }}
        >
          {(data || []).map((x) => (
            <Link
              href={`/sets/${x.id}`}
              key={x.id}
              className="rounded-md border border-slate-300 bg-slate-200 py-4 px-6 shadow-md dark:border-slate-700 dark:bg-slate-800"
            >
              <h2 className="text-2xl font-semibold">{x.title}</h2>
              <div className="mt-2 text-sm text-slate-500">
                {x._count.terms} terms
              </div>
            </Link>
          ))}
        </div>
      </main>
    </>
  );
};

export default Home;
